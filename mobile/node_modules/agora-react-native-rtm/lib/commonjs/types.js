"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RtmMessage = exports.RtmConnectionState = exports.RtmChannelAttribute = exports.RtmAttribute = exports.RemoteInvitationState = exports.RemoteInvitationError = exports.PeerSubscriptionOption = exports.PeerOnlineState = exports.LogLevel = exports.LocalInvitationState = exports.LocalInvitationError = exports.ConnectionChangeReason = void 0;
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
/**
 * @deprecated
 */
let LogLevel;
/**
 * @internal
 * @ignore
 */
exports.LogLevel = LogLevel;
(function (LogLevel) {
  LogLevel[LogLevel["OFF"] = 0] = "OFF";
  LogLevel[LogLevel["INFO"] = 15] = "INFO";
  LogLevel[LogLevel["WARNING"] = 14] = "WARNING";
  LogLevel[LogLevel["ERROR"] = 12] = "ERROR";
  LogLevel[LogLevel["CRITICAL"] = 8] = "CRITICAL";
})(LogLevel || (exports.LogLevel = LogLevel = {}));
class RtmMessage {
  constructor(text) {
    _defineProperty(this, "text", void 0);
    _defineProperty(this, "messageType", void 0);
    _defineProperty(this, "serverReceivedTs", void 0);
    _defineProperty(this, "isOfflineMessage", void 0);
    this.text = text;
  }
}
exports.RtmMessage = RtmMessage;
let PeerSubscriptionOption;
exports.PeerSubscriptionOption = PeerSubscriptionOption;
(function (PeerSubscriptionOption) {
  PeerSubscriptionOption[PeerSubscriptionOption["ONLINE"] = 0] = "ONLINE";
})(PeerSubscriptionOption || (exports.PeerSubscriptionOption = PeerSubscriptionOption = {}));
let PeerOnlineState;
exports.PeerOnlineState = PeerOnlineState;
(function (PeerOnlineState) {
  PeerOnlineState[PeerOnlineState["ONLINE"] = 0] = "ONLINE";
  PeerOnlineState[PeerOnlineState["UNREACHABLE"] = 1] = "UNREACHABLE";
  PeerOnlineState[PeerOnlineState["OFFLINE"] = 2] = "OFFLINE";
})(PeerOnlineState || (exports.PeerOnlineState = PeerOnlineState = {}));
class RtmAttribute {
  constructor(key, value) {
    _defineProperty(this, "key", void 0);
    _defineProperty(this, "value", void 0);
    this.key = key;
    this.value = value;
  }
}
exports.RtmAttribute = RtmAttribute;
class RtmChannelAttribute extends RtmAttribute {
  constructor() {
    super(...arguments);
    _defineProperty(this, "lastUpdateUserId", void 0);
    _defineProperty(this, "lastUpdateTs", void 0);
  }
}
exports.RtmChannelAttribute = RtmChannelAttribute;
let RtmConnectionState;
exports.RtmConnectionState = RtmConnectionState;
(function (RtmConnectionState) {
  RtmConnectionState[RtmConnectionState["DISCONNECTED"] = 1] = "DISCONNECTED";
  RtmConnectionState[RtmConnectionState["CONNECTING"] = 2] = "CONNECTING";
  RtmConnectionState[RtmConnectionState["CONNECTED"] = 3] = "CONNECTED";
  RtmConnectionState[RtmConnectionState["RECONNECTING"] = 4] = "RECONNECTING";
  RtmConnectionState[RtmConnectionState["ABORTED"] = 5] = "ABORTED";
})(RtmConnectionState || (exports.RtmConnectionState = RtmConnectionState = {}));
let ConnectionChangeReason;
exports.ConnectionChangeReason = ConnectionChangeReason;
(function (ConnectionChangeReason) {
  ConnectionChangeReason[ConnectionChangeReason["LOGIN"] = 1] = "LOGIN";
  ConnectionChangeReason[ConnectionChangeReason["LOGIN_SUCCESS"] = 2] = "LOGIN_SUCCESS";
  ConnectionChangeReason[ConnectionChangeReason["LOGIN_FAILURE"] = 3] = "LOGIN_FAILURE";
  ConnectionChangeReason[ConnectionChangeReason["LOGIN_TIMEOUT"] = 4] = "LOGIN_TIMEOUT";
  ConnectionChangeReason[ConnectionChangeReason["INTERRUPTED"] = 5] = "INTERRUPTED";
  ConnectionChangeReason[ConnectionChangeReason["LOGOUT"] = 6] = "LOGOUT";
  ConnectionChangeReason[ConnectionChangeReason["BANNED_BY_SERVER"] = 7] = "BANNED_BY_SERVER";
  ConnectionChangeReason[ConnectionChangeReason["REMOTE_LOGIN"] = 8] = "REMOTE_LOGIN";
})(ConnectionChangeReason || (exports.ConnectionChangeReason = ConnectionChangeReason = {}));
let LocalInvitationState;
exports.LocalInvitationState = LocalInvitationState;
(function (LocalInvitationState) {
  LocalInvitationState[LocalInvitationState["IDLE"] = 0] = "IDLE";
  LocalInvitationState[LocalInvitationState["SENT_TO_REMOTE"] = 1] = "SENT_TO_REMOTE";
  LocalInvitationState[LocalInvitationState["RECEIVED_BY_REMOTE"] = 2] = "RECEIVED_BY_REMOTE";
  LocalInvitationState[LocalInvitationState["ACCEPTED_BY_REMOTE"] = 3] = "ACCEPTED_BY_REMOTE";
  LocalInvitationState[LocalInvitationState["REFUSED_BY_REMOTE"] = 4] = "REFUSED_BY_REMOTE";
  LocalInvitationState[LocalInvitationState["CANCELED"] = 5] = "CANCELED";
  LocalInvitationState[LocalInvitationState["FAILURE"] = 6] = "FAILURE";
})(LocalInvitationState || (exports.LocalInvitationState = LocalInvitationState = {}));
let LocalInvitationError;
exports.LocalInvitationError = LocalInvitationError;
(function (LocalInvitationError) {
  LocalInvitationError[LocalInvitationError["OK"] = 0] = "OK";
  LocalInvitationError[LocalInvitationError["PEER_OFFLINE"] = 1] = "PEER_OFFLINE";
  LocalInvitationError[LocalInvitationError["PEER_NO_RESPONSE"] = 2] = "PEER_NO_RESPONSE";
  LocalInvitationError[LocalInvitationError["INVITATION_EXPIRE"] = 3] = "INVITATION_EXPIRE";
  LocalInvitationError[LocalInvitationError["NOT_LOGGEDIN"] = 4] = "NOT_LOGGEDIN";
})(LocalInvitationError || (exports.LocalInvitationError = LocalInvitationError = {}));
let RemoteInvitationState;
exports.RemoteInvitationState = RemoteInvitationState;
(function (RemoteInvitationState) {
  RemoteInvitationState[RemoteInvitationState["IDLE"] = 0] = "IDLE";
  RemoteInvitationState[RemoteInvitationState["INVITATION_RECEIVED"] = 1] = "INVITATION_RECEIVED";
  RemoteInvitationState[RemoteInvitationState["ACCEPT_SENT_TO_LOCAL"] = 2] = "ACCEPT_SENT_TO_LOCAL";
  RemoteInvitationState[RemoteInvitationState["REFUSED"] = 3] = "REFUSED";
  RemoteInvitationState[RemoteInvitationState["ACCEPTED"] = 4] = "ACCEPTED";
  RemoteInvitationState[RemoteInvitationState["CANCELED"] = 5] = "CANCELED";
  RemoteInvitationState[RemoteInvitationState["FAILURE"] = 6] = "FAILURE";
})(RemoteInvitationState || (exports.RemoteInvitationState = RemoteInvitationState = {}));
let RemoteInvitationError;
exports.RemoteInvitationError = RemoteInvitationError;
(function (RemoteInvitationError) {
  RemoteInvitationError[RemoteInvitationError["OK"] = 0] = "OK";
  RemoteInvitationError[RemoteInvitationError["PEER_OFFLINE"] = 1] = "PEER_OFFLINE";
  RemoteInvitationError[RemoteInvitationError["ACCEPT_FAILURE"] = 2] = "ACCEPT_FAILURE";
  RemoteInvitationError[RemoteInvitationError["INVITATION_EXPIRE"] = 3] = "INVITATION_EXPIRE";
})(RemoteInvitationError || (exports.RemoteInvitationError = RemoteInvitationError = {}));
//# sourceMappingURL=types.js.map